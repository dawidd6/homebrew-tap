name: Uploading

on:
  issue_comment:
    types:
      - created

env:
  HOMEBREW_BINTRAY_REPO: bottles-tap

jobs:
  upload:
    if: github.event.issue.pull_request && github.event.comment.body == '\upload' && (github.event.comment.author_association == 'OWNER' || github.event.comment.author_association == 'MEMBER' || github.event.comment.author_association == 'COLLABORATOR')
    name: Upload bottles
    runs-on: ubuntu-latest
    container:
      image: homebrew/brew
      options: -v /usr/bin/unzip:/usr/bin/unzip
    steps:
      - name: Get user
        uses: actions/github-script@0.9.0
        id: user
        with:
          script: |
            const user = await github.users.getByUsername({
              username: context.actor
            })
            const name = user.data.name || user.data.login
            const email = user.data.email || `${user.data.id}+${user.data.login}@users.noreply.github.com`
            core.info(`==> ${user} <${email}>`)
            core.setOutput("name", name)
            core.setOutput("email", email)
            #- name: Determine package
            #  uses: actions/github-script@0.9.0
            #  id: user
            #  with:
            #    script: |
            #      const files = await github.pulls.listFiles({
            #        ...context.repo,
            #        pull_number: context.payload.issue.number
            #      })
            #      const regex = /Formula\/(?<formula>.+)\.rb/
            #      const formulae = files.data.filter(file => file.filename.match(regex))
            #                                 .map(file => file.filename.match(regex).formula)
            #      for(const formula of formulae) {
            #        core.info(`==> ${formula}`)
            #      }
      - name: Update Homebrew
        run: |
          brew update-reset $(brew --repo)
      - name: Checkout tap
        uses: actions/checkout@v2
        with:
          ref: master
      - name: Setup tap
        run: |
          mkdir -p $(dirname $(brew --repo $GITHUB_REPOSITORY))
          ln -s $PWD $(brew --repo $GITHUB_REPOSITORY)
      - name: Setup git
        env:
          GIT_USER: ${{steps.user.outputs.name}}
          GIT_EMAIL: ${{steps.user.outputs.email}}
        run: |
          git config --global user.name "$GIT_USER"
          git config --global user.email "$GIT_EMAIL"
      - name: Create package
        env:
          HOMEBREW_BINTRAY_USER: ${{secrets.HOMEBREW_BINTRAY_USER}}
          HOMEBREW_BINTRAY_KEY: ${{secrets.HOMEBREW_BINTRAY_KEY}}
          ISSUE_TITLE: ${{github.event.issue.title}}
        run: |
          package="$(echo $ISSUE_TITLE | cut -d':' -f1 | tr '@' ':')"
          echo $package
          curl \
            --user $HOMEBREW_BINTRAY_USER:$HOMEBREW_BINTRAY_KEY \
            --header "Content-Type: application/json" \
            --data " \
              {\"name\": \"$package\", \
              \"vcs_url\": \"$GITHUB_REPOSITORY\", \
              \"licenses\": [\"MIT\"], \
              \"public_download_numbers\": true, \
              \"public_stats\": true \
              }" \
            https://api.bintray.com/packages/$HOMEBREW_BINTRAY_USER/$HOMEBREW_BINTRAY_REPO || true
      - name: Patch brew
        run: |
          cd $(brew --repo)
          git fetch https://github.com/dawidd6/brew pr-pull-commit-author:test
          git checkout test
      - name: Pull bottles
        env:
          HOMEBREW_GITHUB_API_TOKEN: ${{secrets.GITHUB_TOKEN}}
          HOMEBREW_BINTRAY_USER: ${{secrets.HOMEBREW_BINTRAY_USER}}
          HOMEBREW_BINTRAY_KEY: ${{secrets.HOMEBREW_BINTRAY_KEY}}
          ISSUE_NUMBER: ${{github.event.issue.number}}
        run: |
          brew pr-pull \
            --verbose \
            --bintray-org=$HOMEBREW_BINTRAY_USER \
            --tap=$GITHUB_REPOSITORY \
            --workflow=building.yml \
            $ISSUE_NUMBER
      - name: Push commits
        run: |
          git push
      - name: Delete branch
        uses: dawidd6/action-delete-branch@v2
        with:
          github_token: ${{secrets.GITHUB_TOKEN}}
          numbers: ${{github.event.issue.number}}
